openapi: 3.0.3
info:
  title: Ecomm - API Products
  description: API para consultar, adicionar, atualizar e remover categorias e produtos
  version: 1.0.0
  termsOfService: https://mockapi.io/docs
  contact:
    name: Rhian Moura
    email: rhian.moura@pagonxt.com
  license:
    name: Licença Pública
    url: https://www.gnu.org/licenses/gpl-3.0.html
servers:
- url: https://63ced172fdfe2764c72b1707.mockapi.io/
  description: API Products
paths:
  /api/categories:
    get:
      tags:
      - Categories
      summary: Lista todas as categorias
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoriesWithId"
        404:
          description: Não há nenhuma categoria cadastrada
          content:
            application/json:
              example: "Not found"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/categories/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
        example: "63caa785ae701b25441ff0be"
    get:
      tags:
      - Categories
      summary: Recupera uma categoria pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesWithId"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/admin/categories:
    post:
      tags:
      - Categories
      summary: Cria uma nova categoria. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriesWithoutId"
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesWithId"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/admin/categories/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
        example: "63caa785ae701b25441ff0be"
    put:
      tags:
      - Categories
      summary: Atualiza todas as informações de uma categoria pelo ID. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriesWithoutId"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesWithId"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
    delete:
      tags:
      - Categories
      summary: Deleta uma categoria pelo ID. Método somente autorizado à administradores
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
    patch:
      tags:
      - Categories
      summary: Atualiza o status de uma categoria pelo ID. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriesWithId"
        404:
          description: Categoria não encontrada
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/products:
    get:
      tags:
      - Products
      summary: Lista todos os produtos
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Não há nenhum produto cadastrado
          content:
            application/json:
              example: "Not found"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/products/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
        example: "63caa785ae701b25441ff0be"
    get:
      tags:
      - Products
      summary: Recupera um produto pelo ID
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/admin/products:
    post:
      tags:
      - Products
      summary: Cria um novo produto. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductsWithoutId"
      responses:
        201:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
  /api/admin/products/{id}:
    parameters:
      - name: id
        in: path
        schema:
          type: string
        required: true
        example: "63caa785ae701b25441ff0be"
    put:
      tags:
      - Products
      summary: Atualiza todas as informações de um produto pelo ID. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductsWithoutId"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
    patch:
      tags:
      - Products
      summary: Atualiza algumas informações de um produto pelo ID. Método somente autorizado à administradores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductsWithoutId"
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
    delete:
      tags:
      - Products
      summary: Deleta um produto pelo ID. Método somente autorizado à administradores
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsWithId"
        404:
          description: Produto não encontrado
          content:
            application/json:
              example: "Not found"
        401:
          description: Desautorizado
          content: 
            aplication/json:
              example: "Acesso Negado! Usuário desautorizado"
        500:
          description: Erro Interno
          content:
            application/json:
              example: "Internal Server Error"
components:
  schemas:
    CategoriesWithId:
      type: object
      properties:
        id:
          type: string
        catgeoria:
          type: string
        status:
          type: string
    CategoriesWithoutId:
      type: object
      properties:
        categoria:
          type: string
        status:
          type: string
    ProductsWithId:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        precoUnitario:
          type: number
          format: double
        qntdEstoque:
          type: integer
        categoria:
          type: object
          properties:
            categoria_id:
              type: string
            nome:
              type: string
    ProductsWithoutId:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        slug:
          type: string
        precoUnitario:
          type: number
          format: double
        qntdEstoque:
          type: integer
        categoria:
          type: object
          properties:
            categoria_id:
              type: string
            nome:
              type: string